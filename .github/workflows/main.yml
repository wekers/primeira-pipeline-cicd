name: CI-CD
on: 
  push:
    branches: ["main"]
  workflow_dispatch:
jobs:
###########  
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Obtendo o código
        uses: actions/checkout@v4.2.2
        
      - name: Autenticação no Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build da Imagem Docker
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: | 
            wekers/aula-primeira-pipeline:v${{ github.run_number }} 
            wekers/aula-primeira-pipeline:latest 
###########
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - name: Obtendo o código
        uses: actions/checkout@v4.2.2

      - name: Configurar kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      
      - name: Configurar contexto do Kubernetes
        run: |
          mkdir -p ~/.kube
          echo '${{ secrets.K8S_CONFIG }}' > ~/.kube/config
          kubectl config use-context default
          
      - name: Deploy da aplicação
        run: |
          # Substituir a tag da imagem
          sed -i "s|v{{ github.run_number }}|v${{ github.run_number }}|g" ./k8s/deployment.yaml
          
          # Aplicar os manifests
          kubectl apply -f ./k8s/deployment.yaml
          
      - name: Verificar deploy
        run: |
          kubectl get pods -o wide
          kubectl get services
          kubectl get ingress
          echo "A aplicação estará disponível em: http://web.local"